# Динамічний вибір порту для запуску програми.
# Якщо значення "0", то порт вибирається випадковим чином під час запуску.
server.port=0

# Ім'я програми, яке буде використовуватися для реєстрації в Eureka та інших сервісах.
spring.application.name=esecurity

# Налаштування Eureka клієнта:
# Активує функціонал клієнта Eureka.
eureka.client.enabled=true
# Дозволяє клієнту отримувати інформацію про інші сервіси, зареєстровані в Eureka.
eureka.client.fetch-registry=true
# Дозволяє цьому клієнту реєструватися в Eureka як сервіс.
eureka.client.register-with-eureka=true
# Адреса Eureka сервера для реєстрації та отримання даних про інші сервіси.
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# Формат виведення логів у консолі:
# Виводить назву класу, рівень логу (INFO, ERROR тощо), час і саме повідомлення.
logging.pattern.console=%C{1.} [%-5level] %d{HH:mm:ss} -%msg%n

# Налаштування для відправки електронної пошти:
# Використовується Gmail SMTP сервер за замовчуванням або кастомний, якщо вказані змінні оточення.
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
# Порт для SMTP сервера (587 для TLS).
spring.mail.port=${MAIL_PORT:587}
# Ім'я користувача для поштового облікового запису.
spring.mail.username=${MAIL_USERNAME}
# Пароль для поштового облікового запису.
spring.mail.password=${MAIL_PASSWORD}
# Увімкнення аутентифікації SMTP.
spring.mail.properties.mail.smtp.auth=true
# Увімкнення TLS для безпечної передачі даних.
spring.mail.properties.mail.smtp.starttls.enable=true

# Налаштування підключення до бази даних MySQL:
# URL для підключення до бази даних MySQL з параметрами оточення або замовчуванням.
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/soc
# Ім'я користувача для доступу до бази даних MySQL.
spring.datasource.username=${MYSQL_USER}
# Пароль для доступу до бази даних MySQL.
spring.datasource.password=${MYSQL_ROOT_PASSWORD}
# Вказує драйвер для MySQL.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Стратегія управління схемою бази даних (оновлення таблиць при запуску).
spring.jpa.hibernate.ddl-auto= update

# Налаштування JWT (JSON Web Token):
# Час життя JWT токена в мілісекундах (у цьому випадку 10 секунд).
jwt-expiration-milliseconds=10000
# Секретний ключ для підпису і перевірки JWT токенів.
jwt-secret-key=veryhardtoguesssecterkeyitisactualsecretdonttellanybody

# Налаштування Redis:
# Хост сервера Redis.
spring.data.redis.host=redis-19899.c250.eu-central-1-1.ec2.redns.redis-cloud.com
# Порт для підключення до сервера Redis.
spring.data.redis.port=19899
# Пароль для доступу до Redis (необхідний для аутентифікації).
spring.data.redis.password=Xk2ZZY3Jq9d77ENZkcfSxeRjqo0SGzZa
